// Code generated by protoc-gen-go. DO NOT EDIT.
// source: peatio/smaug/v3/snapshot/snapshot.proto

package snapshot

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	order "gomem/protopb/order"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Snapshot struct {
	Orders               []*order.Order `protobuf:"bytes,1,rep,name=orders,proto3" json:"orders,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Snapshot) Reset()         { *m = Snapshot{} }
func (m *Snapshot) String() string { return proto.CompactTextString(m) }
func (*Snapshot) ProtoMessage()    {}
func (*Snapshot) Descriptor() ([]byte, []int) {
	return fileDescriptor_be803b0862999fdb, []int{0}
}

func (m *Snapshot) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Snapshot.Unmarshal(m, b)
}
func (m *Snapshot) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Snapshot.Marshal(b, m, deterministic)
}
func (m *Snapshot) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Snapshot.Merge(m, src)
}
func (m *Snapshot) XXX_Size() int {
	return xxx_messageInfo_Snapshot.Size(m)
}
func (m *Snapshot) XXX_DiscardUnknown() {
	xxx_messageInfo_Snapshot.DiscardUnknown(m)
}

var xxx_messageInfo_Snapshot proto.InternalMessageInfo

func (m *Snapshot) GetOrders() []*order.Order {
	if m != nil {
		return m.Orders
	}
	return nil
}

func init() {
	proto.RegisterType((*Snapshot)(nil), "peatio.smaug.v3.Snapshot")
}

func init() {
	proto.RegisterFile("peatio/smaug/v3/snapshot/snapshot.proto", fileDescriptor_be803b0862999fdb)
}

var fileDescriptor_be803b0862999fdb = []byte{
	// 141 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2f, 0x48, 0x4d, 0x2c,
	0xc9, 0xcc, 0xd7, 0x2f, 0xce, 0x4d, 0x2c, 0x4d, 0xd7, 0x2f, 0x33, 0xd6, 0x2f, 0xce, 0x4b, 0x2c,
	0x28, 0xce, 0xc8, 0x2f, 0x81, 0x33, 0xf4, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85, 0xf8, 0x21, 0x0a,
	0xf5, 0xc0, 0x0a, 0xf5, 0xca, 0x8c, 0xa5, 0x14, 0xd1, 0x75, 0xe6, 0x17, 0xa5, 0xa4, 0x16, 0x41,
	0x48, 0x88, 0x1e, 0x25, 0x2b, 0x2e, 0x8e, 0x60, 0xa8, 0x29, 0x42, 0x7a, 0x5c, 0x6c, 0x60, 0xa9,
	0x62, 0x09, 0x46, 0x05, 0x66, 0x0d, 0x6e, 0x23, 0x31, 0x3d, 0x34, 0x03, 0xf5, 0xfc, 0x41, 0xd2,
	0x41, 0x50, 0x55, 0x4e, 0x06, 0x51, 0x7a, 0xe9, 0x99, 0x25, 0x19, 0xa5, 0x49, 0x7a, 0xc9, 0xf9,
	0xb9, 0xfa, 0x50, 0xbb, 0x32, 0x4a, 0x93, 0xf4, 0x71, 0x39, 0x38, 0x89, 0x0d, 0x6c, 0xa9, 0x31,
	0x20, 0x00, 0x00, 0xff, 0xff, 0x94, 0x67, 0x24, 0x01, 0xd3, 0x00, 0x00, 0x00,
}
